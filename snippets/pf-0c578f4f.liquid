{% comment %}
This file is auto-generated by PageFly. The content can be overridden when publish page in PageFly. Please do not update this file directly.
If you plan to remove PageFly, please see the guide in our help center first: https://help.pagefly.io/.
{% endcomment %}

{% render 'pf-0c578f4f-css' %}
<style>form.klaviyo-form>div>[data-testid=form-row]>[component="[object Object]"]:nth-child(2){position:absolute!important;top:10px!important;right:25px!important}form.klaviyo-form>div>[data-testid=form-row]>[component="[object Object]"]:nth-child(2) button{padding:0 11px!important}</style><div data-pf-editor-version="gen-2" class="sc-bkSTSn eCpwvD __pf __pf_W_9-5ToL"><section data-section-id="pf-3a0b" data-pf-type="FlexSection" class="sc-hceuva jkduKR pf-0c578f4f1921-4_ pf-container-1 pf-color-scheme-1"><div class="sc-jeyqhx gyoqcw pf-flex-section"><div data-pf-type="FlexBlock" class="sc-czLrCa ddfVfl pf-0c578f4f1921-5_"><div data-pf-type="FlexBlock" class="sc-czLrCa ddfVfl pf-0c578f4f1921-6_"><h3 data-pf-type="Heading2" class="sc-cXPBhi kkWDYP pf-0c578f4f1921-7_ pf-heading-1-h3">Sign up for new stories and personal offers</h3><div data-pf-type="Custom.HTML" class="sc-fPrdjK iFszLQ pf-0c578f4f1921-9_"><div id="footer_email_capture" class="klaviyo-form-XCxxBA klaviyo-embed-form-wrapper"></div></div></div><div data-pf-type="FlexBlock" class="sc-czLrCa ddfVfl pf-0c578f4f1921-10_"><div data-pf-type="Custom.HTML" class="sc-fPrdjK iFszLQ pf-0c578f4f1921-11_"><ul class="footer__payment-icons h-stack wrap gap-2">
  {%- for type in shop.enabled_payment_types -%}
  <li class="contents">{{ type | payment_type_svg_tag }}</li>
  {%- endfor -%}
</ul></div></div></div><div data-pf-type="FlexBlock" class="sc-czLrCa ddfVfl pf-0c578f4f1921-12_"><div data-pf-type="Divider2" class="sc-fyVeKD kNAOGR pf-0c578f4f1921-13_ pf-divider-1"></div></div><div data-pf-type="FlexBlock" class="sc-czLrCa ddfVfl pf-0c578f4f1921-17_"><div data-pf-type="Custom.HTML" class="sc-fPrdjK iFszLQ pf-0c578f4f1921-18_">{%- for link in linklists['RF_footer_menu'].links -%}
<div data-pf-type="FlexBlock">
<a href="{{ link.url }}" class="inline-block link-faded break-all">{{ link.title }}</a>
</div>
{%- endfor -%}</div></div><div data-pf-type="FlexBlock" class="sc-czLrCa ddfVfl pf-0c578f4f1921-19_"><div data-pf-type="Custom.HTML" class="sc-fPrdjK iFszLQ pf-0c578f4f1921-20_"><div class="footer__aside-top">
  {%- render 'social-media' -%}
</div></div></div><div data-pf-type="FlexBlock" class="sc-czLrCa ddfVfl pf-0c578f4f1921-21_"><h4 data-pf-type="Heading2" class="sc-cXPBhi kkWDYP pf-0c578f4f1921-22_ pf-heading-1-h4">Â©2025 PeckPerk Inc.</h4></div></div></section></div><script>
    !function(){
      window.__pagefly_section_setting__ = {"pageTitle":"Rf_Footer","pageType":"section","pageId":"0c578f4f-1921-4868-ab19-fb7e22299bf7","lazyLoad":false,"forceByPassGoogleLightHouse":false,"imageLazyLoad":false,"nativeImageLazyLoad":true,"useThemeJQ":false,"sectionRootType":"FlexSection","trackingIDs":[]};
      window.__pagefly_setting__&&(window.__pagefly_setting2__=window.__pagefly_setting__),window.__pagefly_setting__={"baseURL":"https://apps.pagefly.io","analyticsURL":"https://analytics.pagefly.io","isBackend":false,"cdnURL":"https://cdn.pagefly.io","pageflyVersion":"4.23.10.1","shopDomain":"eaba0b-2.myshopify.com","elementData":{},"shopifyProxyPath":"/apps/pagefly"},window.__pagefly_setting2__&&(window.__pagefly_setting__=function _(d,b){let c={...d||{}};for(let a of Object.keys(b))b[a]instanceof Object&&(Array.isArray(b[a])&&c[a]?Object.assign(b[a],[...b[a],...c[a]]):Object.assign(b[a],_(c[a],b[a])));return Object.assign(c||{},b),c}(__pagefly_setting2__,__pagefly_setting__),delete window.__pagefly_setting2__),window.__pagefly_setting__.moneyFormat={{shop.money_format|json}}}();
    </script><script>!function () { var e = "onsite-modules", n = document; var c = window.__klKey || function () { var e = window._learnq; if (e && e instanceof Array) for (var n = 0; n < e.length; n += 1) { var c = e[n]; if ("account" === (null == c ? void 0 : c[0])) return null == c ? void 0 : c[1] } return null }(); if (c) { var a = function () { for (var e, c = /klaviyo.com.*klaviyo.js/, a = n.getElementsByTagName("script"), t = 0; t < a.length; t += 1) { var o = a[t]; if (o && c.exec(o.src)) { e = o; break } } if (!e) return null; var r = new RegExp("[?&]".concat("module", "=([^&#]*)")).exec(e.src); return r && r[1] && decodeURI(r[1]) || null }(), t = a ? "&module=".concat(a) : "", o = n.createElement("script"); o.type = "text/javascript", o.async = !0, o.src = "https://static.klaviyo.com/onsite/js/klaviyo.js?company_id=".concat(c).concat(t, ""), n.head.appendChild(o) } else !function (n) { var c; try { c = localStorage.getItem("debug") } catch (e) { return } c && -1 !== c.indexOf(e) && console.log("".concat(e, " - ").concat(n)) }("exiting | could not find company ID") }();


document.addEventListener('DOMContentLoaded', function load() {
  class UtmCookie {
    constructor(options = {}) {
      this._cookieNamePrefix = "_uc_";
      this._domain = options.domain || window.location.hostname;
      this._sessionLength = options.sessionLength || 1;
      this._cookieExpiryDays = options.cookieExpiryDays || 365;
      this._additionalParams = options.additionalParams || [];
      this._utmParams = ["utm_source", "utm_medium", "utm_campaign", "utm_term", "utm_content"];

      this.writeInitialReferrer();
      this.writeLastReferrer();
      this.writeInitialLandingPageUrl();
      this.setCurrentSession();

      if (this.additionalParamsPresentInUrl()) this.writeAdditionalParams();
      if (this.utmPresentInUrl()) this.writeUtmCookieFromParams();
    }

    createCookie(name, value, days, path = "/", domain = this._domain, secure) {
      let date, expires = "";
      if (days) {
        date = new Date();
        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
        expires = "; expires=" + date.toUTCString();
      }
      const domainStr = domain ? "; domain=" + domain : "";
      const secureStr = secure ? "; secure" : "";
      document.cookie = `${this._cookieNamePrefix}${name}=${encodeURIComponent(value)}${expires}; path=${path}${domainStr}${secureStr}`;
    }

    readCookie(name) {
      const nameEQ = `${this._cookieNamePrefix}${name}=`;
      const ca = document.cookie.split(';');
      for (let c of ca) {
        while (c.charAt(0) === ' ') c = c.substring(1);
        if (c.indexOf(nameEQ) === 0) return decodeURIComponent(c.substring(nameEQ.length));
      }
      return null;
    }

    eraseCookie(name) {
      this.createCookie(name, "", -1);
    }

    getParameterByName(name) {
      name = name.replace(/[\[\]]/g, "\\$&");
      const regex = new RegExp(`[?&]${name}=([^&#]*)`);
      const results = regex.exec(window.location.search);
      return results ? decodeURIComponent(results[1].replace(/\+/g, " ")) : "";
    }

    additionalParamsPresentInUrl() {
      return this._additionalParams.some(param => this.getParameterByName(param));
    }

    utmPresentInUrl() {
      return this._utmParams.some(param => this.getParameterByName(param));
    }

    writeCookie(name, value) {
      this.createCookie(name, value, this._cookieExpiryDays);
    }

    writeAdditionalParams() {
      this._additionalParams.forEach(param => {
        const value = this.getParameterByName(param);
        if (value) this.writeCookie(param, value);
      });
    }

    writeUtmCookieFromParams() {
      this._utmParams.forEach(param => {
        const value = this.getParameterByName(param);
        if (value) this.writeCookie(param, value);
      });
    }

    writeCookieOnce(name, value) {
      if (!this.readCookie(name)) this.writeCookie(name, value);
    }

    _sameDomainReferrer(referrer) {
      return referrer.includes(this._domain) || referrer.includes(window.location.hostname);
    }

    _isInvalidReferrer(referrer) {
      return !referrer || referrer === "";
    }

    writeInitialReferrer() {
      let value = document.referrer;
      if (this._isInvalidReferrer(value)) value = "direct";
      this.writeCookieOnce("referrer", value);
    }

    writeLastReferrer() {
      let value = document.referrer;
      if (!this._sameDomainReferrer(value)) {
        if (this._isInvalidReferrer(value)) value = "direct";
        this.writeCookie("last_referrer", value);
      }
    }

    writeInitialLandingPageUrl() {
      const value = this.cleanUrl();
      if (value) this.writeCookieOnce("initial_landing_page", value);
    }

    initialReferrer() {
      return this.readCookie("referrer");
    }

    lastReferrer() {
      return this.readCookie("last_referrer");
    }

    initialLandingPageUrl() {
      return this.readCookie("initial_landing_page");
    }

    incrementVisitCount() {
      const existing = parseInt(this.readCookie("visits"), 10);
      const newVal = isNaN(existing) ? 1 : existing + 1;
      this.writeCookie("visits", newVal);
    }

    visits() {
      return this.readCookie("visits");
    }

    setCurrentSession() {
      if (!this.readCookie("current_session")) {
        this.createCookie("current_session", "true", this._sessionLength / 24);
        this.incrementVisitCount();
      }
    }

    cleanUrl() {
      return window.location.origin + window.location.pathname + window.location.search.replace(/utm_[^&]+&?/g, '').replace(/&$/, '').replace(/^\?$/, '') + window.location.hash;
    }
  }

  class UtmForm {
    constructor(options = {}) {
      this._utmParamsMap = {
        utm_source: options.utm_source_field || "USOURCE",
        utm_medium: options.utm_medium_field || "UMEDIUM",
        utm_campaign: options.utm_campaign_field || "UCAMPAIGN",
        utm_content: options.utm_content_field || "UCONTENT",
        utm_term: options.utm_term_field || "UTERM"
      };

      this._additionalParamsMap = options.additional_params_map || {};
      this._initialReferrerField = options.initial_referrer_field || "IREFERRER";
      this._lastReferrerField = options.last_referrer_field || "LREFERRER";
      this._initialLandingPageField = options.initial_landing_page_field || "ILANDPAGE";
      this._visitsField = options.visits_field || "VISITS";
      this._addToForm = options.add_to_form || "all";
      this._formQuerySelector = options.form_query_selector || "form";

      this.utmCookie = new UtmCookie({
        domain: options.domain,
        sessionLength: options.sessionLength,
        cookieExpiryDays: options.cookieExpiryDays,
        additionalParams: Object.keys(this._additionalParamsMap)
      });

      if (this._addToForm !== "none") {
        this.addAllFields();
      }
    }

    addAllFields() {
      for (const param in this._utmParamsMap) {
        this.addFormElem(this._utmParamsMap[param], this.utmCookie.readCookie(param));
      }

      for (const param in this._additionalParamsMap) {
        this.addFormElem(this._additionalParamsMap[param], this.utmCookie.readCookie(param));
      }

      this.addFormElem(this._initialReferrerField, this.utmCookie.initialReferrer());
      this.addFormElem(this._lastReferrerField, this.utmCookie.lastReferrer());
      this.addFormElem(this._initialLandingPageField, this.utmCookie.initialLandingPageUrl());
      this.addFormElem(this._visitsField, this.utmCookie.visits());
    }

    addFormElem(fieldName, fieldValue) {
      if (!fieldValue) return;
      const forms = document.querySelectorAll(this._formQuerySelector);
      if (forms.length === 0) return;

      if (this._addToForm === "first") {
        const firstForm = forms[0];
        this.insertAfter(this.getFieldEl(fieldName, fieldValue), firstForm.lastChild);
      } else {
        forms.forEach(form => {
          this.insertAfter(this.getFieldEl(fieldName, fieldValue), form.lastChild);
        });
      }
    }

    getFieldEl(name, value) {
      const el = document.createElement("input");
      el.type = "hidden";
      el.name = name;
      el.value = value;
      return el;
    }

    insertAfter(newNode, referenceNode) {
      referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);
    }
  }

  window._uf = window._uf || {};
  window.UtmForm = new UtmForm(window._uf);


  let form_id_clicked = undefined;
  let custom_redirect_url = "/pages/thankyou";

  const utmParams = {
    "utm_source": "USOURCE",
    "utm_medium": "UMEDIUM",
    "utm_campaign": "UCAMPAIGN",
    "utm_content": "UCONTENT",
    "utm_term": "UTERM"
  };

  const merge_vars = {};
  for (const param in utmParams) {
    const paramValue = window.UtmForm.utmCookie.readCookie(param);
    if (paramValue) {
      merge_vars[utmParams[param]] = paramValue;
    }
  }

  merge_vars['IREFERRER'] = (window.UtmForm.utmCookie.initialReferrer() || '').replace(/^https?%3A\/\//, '');
  merge_vars['LREFERRER'] = (window.UtmForm.utmCookie.lastReferrer() || '').replace(/^https?%3A\/\//, '');
  merge_vars['ILANDPAGE'] = (window.UtmForm.utmCookie.initialLandingPageUrl() || '').replace(/^https?%3A\/\//, '');
  merge_vars['VISITS'] = window.UtmForm.utmCookie.visits();

  document.addEventListener('datalayerPush', function (e) {
    let redirect = '/thankyou/';
    if (Array.isArray(window.dataLayer)) {
      for (const value of window.dataLayer) {
        if (value.event === 'success_subscription') {
          redirect = value.redirect;
          break;
        }
      }
    }
    //window.location.href = redirect;
  });

  function showKlaviyoPhoneInput(input) {
    const wrapper = input.closest('.klaviyo-embed-form-wrapper');
    if (!wrapper) return;

    const rows = wrapper.querySelectorAll('form [data-testid="form-row"]');
    rows.forEach(row => {
      //row.style.display = 'inherit';
    });
  }

  const targetNodes = document.getElementsByClassName('klaviyo-embed-form-wrapper');
  const config = { attributes: true, childList: true, subtree: true };

  const callback = function (mutationsList, observer) {
    for (const mutation of mutationsList) {
      const button = mutation.target.querySelector('button');
      const formWrapper = mutation.target.closest('.klaviyo-embed-form-wrapper');

      if (button && formWrapper && !formWrapper.querySelector('form').id) {
        const form = formWrapper.querySelector('form');
        let id = formWrapper.id || 'footer_email_capture';
        form.id = id;

        setTimeout(() => {
          const emailInput = form.querySelector('input[type="email"]');
          const telInput = form.querySelector('input[type="tel"]');

          //if (telInput) telInput.closest('[data-testid="form-row"]').style.display = "none";

          const paragraph = form.querySelector("p");
          //if (paragraph) paragraph.closest('[data-testid="form-row"]').style.display = "none";

          ['paste', 'keyup', 'focus'].forEach(event => {
            emailInput.addEventListener(event, () => showKlaviyoPhoneInput(emailInput));
          });

          form.querySelector("button").addEventListener("click", () => {
            const old = document.getElementById('form_id_clicked');
            if (old) old.remove();

            const div = document.createElement('div');
            div.id = 'form_id_clicked';
            div.style.display = 'none';
            div.setAttribute('form_id_clicked', id);
            document.body.appendChild(div);

            form_id_clicked = id;
          });

          ['input[type="email"]', 'input[type="tel"]'].forEach(selector => {
            form.querySelectorAll(selector).forEach(input => {
              input.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') {
                  const old = document.getElementById('form_id_clicked');
                  if (old) old.remove();

                  const div = document.createElement('div');
                  div.id = 'form_id_clicked';
                  div.style.display = 'none';
                  div.setAttribute('form_id_clicked', id);
                  document.body.appendChild(div);

                  form_id_clicked = id;
                }
              });
            });
          });

          if (emailInput.value !== '') {
            showKlaviyoPhoneInput(emailInput);
          }

          observer.disconnect();
        }, 300);
      }
    }
  };

  const observer = new MutationObserver(callback);
  for (let i = 0; i < targetNodes.length; i++) {
    observer.observe(targetNodes[i], config);
  }

  window.addEventListener("klaviyoForms", function (e) {
    if (e.detail.type === 'submit') {
      let formId = 'footer_email_capture';
      const tracker = document.getElementById('form_id_clicked');
      if (tracker) {
        formId = tracker.getAttribute('form_id_clicked');
      }
      emailToSend = document.correctedEmail || e.detail.metaData.$email;
      if (undefined != document.correctedEmail) {
        emailToSend = document.correctedEmail;
      }

      if (typeof dataLayer !== "undefined") {
        setTimeout(() => {
          dataLayer.push({
            'event': 'success_subscription',
            'formid': formId,
            'email': emailToSend,
            'fbLeadEventId': 'rf_lead_',
            'redirect': custom_redirect_url + window.location.search
          });
        }, 100);
      }
    }
  });
});</script>